#!/usr/bin/env python
import argparse
import logging
from mqttstatus.status import ServerStatus



class VAction(argparse.Action):
    """
    Verbosity flag action. Original source:
      http://stackoverflow.com/a/6076779/5480526
    """
    def __call__(self, parser, args, values, option_string=None):
        if values == None:
            values = "1"
        try:
            values = int(values)
        except ValueError:
            values = values.count("v") + 1
        setattr(args, self.dest, values)



def prepare_parser(parser):
    parser.add_argument("--broker", type=str, default="localhost")
    parser.add_argument("--name", type=str, default="none")
    parser.add_argument("--interval", type=int, default=30)
    parser.add_argument('-v', nargs='?', action=VAction, dest="verbose")
    parser.add_argument('--platform', action="store_true")
    parser.add_argument('--uptime', action="store_true")
    parser.add_argument('--memory', action="store_true")
    parser.add_argument('--load', action="store_true")
    parser.add_argument("--storage", type=str, nargs="*", default=[])
    

def run_program(parser):
    config = vars(parser.parse_args())
    # prepare logging
    log_level = logging.ERROR
    if config["verbose"] and config["verbose"] == 1:
        log_level = logging.INFO
    elif config["verbose"] and config["verbose"] >= 2:
        log_level = logging.DEBUG
    logging.basicConfig()
    logger = logging.getLogger("cul-mqtt")
    logger.setLevel(log_level)
    # run
    s = ServerStatus(config["broker"], config["name"], config["interval"],
                     platform=config["platform"], uptime=config["uptime"],
                     memory=config["memory"], load=config["load"],
                     storage=config["storage"], log_level=log_level)
    s.start()
    
    
    
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Server status monitor.")
    prepare_parser(parser)
    run_program(parser)
